{
    "collab_server" : "",
    "contents" : "#Exercise 4\n\n# 1. Make a scatter plot showing logSal against Years.\nggplot(data = baseball,\n       aes(x=Years,y=logSal)) + geom_point()\n#     - Colour points by Position. Would this be possible with base graphics? Would it be easy?\nggplot(data = baseball,\n       aes(x=Years,y=logSal)) +geom_point()+\n  geom_jitter(height = 2.5,width = 0.1,alpha=0.5)\n#     - Deal with overplotting.\nggplot(data = baseball,\n       aes(x=Years,y=logSal)) +geom_point(alpha=0.5)+\n  geom_jitter(height = 2.5,width = 0.1,alpha=0.5)\n#     - Change the plot theme. I like the classic theme, but you should find something that works for you.\n#     - Install ggthemes and explore a wider range of themes.\n#     - Add a smoothed curve to the data.\n#     - Try a different color palette. See http://colorbrewer2.org/.\n\n#     - Add a 2D density estimate.\nggplot(data = baseball,\n       aes(x=Years,y=logSal)) +geom_point()+\n  geom_jitter(height = 2.5,width = 0.1,alpha=0.5) +\n  stat_density2d() + facet_wrap(~Position)\n\n\n#Exercise 5\n# 1. Make a histogram of logSal\n\nqplot(baseball$logSal,geom = \"histogram\")\n\nggplot(data=baseball, aes(baseball$logSal)) + geom_histogram()\n\n#     - Sort out any warning messages.\nggplot(data=baseball, aes(baseball$logSal)) + geom_histogram(binwidth = 0.05)\n\n#     - Create overlays for each Position. ???\n\n\n#     - Split the plot into facets.\n\nggplot(data=baseball, aes(logSal)) + geom_histogram(binwidth = 0.05,col=\"black\",alpha= 0.8)+facet_wrap(~ Position)\n\n\n#     - Add apropriate labels for axes. Add a plot title.\nggplot(data=baseball, aes(logSal)) +\n  geom_histogram(binwidth = 0.05,col=\"black\",alpha= 0.8)+\n  facet_wrap(~ Position)+\n  labs(title=\"logSal\")+\n  labs(x=\"logSal\", y=\"Count\")\n\n\n\n# 2. Create a smoothed density estimate with the same data.\n\nggplot(data=baseball, aes(logSal)) +\n  geom_histogram(binwidth = 0.05,col=\"black\",alpha= 0.8)+\n  facet_wrap(~ Position)+\n  labs(title=\"logSal\")+\n  labs(x=\"logSal\", y=\"Count\")+\n  geom_density(col=2)\n\n#     - Create overlays for each Position. ??\n\n\n# Exercise 6 ----------------------------------------------------------------------------------------------------------\n\n# Produce a visualisation like http://www.economist.com/blogs/graphicdetail/2017/04/daily-chart-3.\n#\n#     a) Find appropriate data.\n#     b) Transform data into a suitable format.\n\nworld_happiness <- read.csv(\"C:/Users/Paola/Desktop/2017.csv\")\nView(world_happiness)\ncountry_by_continent <- read.csv(\"C:/Users/Paola/Desktop/Countries-Continents-csv.csv\")\nnames(world_happiness)\nworld_happiness$Continent <- (country_by_continent[which(country_by_continent[which(country_by_continent$Country == \"Canada\"),1]\n,1)])\n\n\nhelper <- function(country) {\n  indices <- which(as.character(country_by_continent$Country) == as.character(country))\n  ifelse(length(indices)== 0, NA,as.character(country_by_continent[indices[1],1]))\n}\n\nContinent <- purrr::map_chr(world_happiness$Country, helper)\ncountry_by_continent[which(country_by_continent$Country == \"Canada\"),1]\n\ncountry_by_continent <- country_by_continent[,1:2]\nnew_row <- data.frame(\"Asia\",\"Taiwan Province of China\")\nnames(new_row) <- c(\"Continent\",\"Country\")\ncountry_by_continent <- rbind(country_by_continent,new_row)\n\ncountry_by_continent <- country_by_continent[,1:2]\nhey <- data.frame(\"Asia\",\"Russia\")\nnames(hey) <- c(\"Continent\",\"Country\")\ncountry_by_continent <- rbind(country_by_continent,hey)\n\n\nyuhu <- data.frame(\"Asia\",\"South Korea\")\nnames(yuhu) <- c(\"Continent\",\"Country\")\ncountry_by_continent <- rbind(country_by_continent,yuhu)\n\nyuhu <- data.frame(\"Europe\",\"North Cyprus\")\nnames(yuhu) <- c(\"Continent\",\"Country\")\ncountry_by_continent <- rbind(country_by_continent,yuhu)\n\n#     c) Construct the visualisation.\n\nggplot(data = world_happiness, aes(x =Economy..GDP.per.Capita., y = Happiness.Score,color=Continent))+\n  geom_point(alpha=0.7,size=1.9)+\n  theme_minimal()+\n  labs(title=\"Happiness against GDP by Continent\") +\n  labs(x=\"GDP per Capita\", y=\"Happiness Score\")\n\n\n\nfix(world_happiness)\n\n\n\n\n\n\n\n\n\n #     d)share with Zac on Github\n",
    "created" : 1499076307234.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4271201138",
    "id" : "F42C2D2A",
    "lastKnownWriteTime" : 1499064548,
    "last_content_update" : 1499064548,
    "path" : "C:/Users/Paola/Desktop/iX Data Science/Day 5 - Class/global_terrorism.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}